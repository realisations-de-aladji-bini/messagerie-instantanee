const app = require('../app')
const request = require('supertest')

test('Test if user can log in and try to post a message in a group without content', async () => {
  let response = await request(app)
    .post('/login')
    .send({ email: 'Sebastien.Viardot@grenoble-inp.fr', password: '123456' })
  expect(response.statusCode).toBe(200)
  expect(response.body).toHaveProperty('token')
  response = await request(app)
    .post('/api/messages/1')
    .set('x-access-token', response.body.token)
    .send({})
  expect(response.statusCode).toBe(400)
  expect(response.body.message).toBe('You cannot post an empty message. Please specify the message content')
})

test('Test if user can log in and try to post a message in a group of which he is not a member ', async () => {
  let response = await request(app)
    .post('/login')
    .send({ email: 'Sebastien.Viardot@grenoble-inp.fr', password: '123456' })
  expect(response.statusCode).toBe(200)
  expect(response.body).toHaveProperty('token')
  response = await request(app)
    .post('/api/messages/3')
    .set('x-access-token', response.body.token)
    .send({ content: 'Hello guys and ladies. Welcome in our group ! ' })
  expect(response.statusCode).toBe(401)
  expect(response.body.message).toBe('You must be a group member to do that')
})

test('Test if user can log in and try to list messages sent in a group he is not a member', async () => {
  let response = await request(app)
    .post('/login')
    .send({ email: 'Sebastien.Viardot@grenoble-inp.fr', password: '123456' })
  expect(response.statusCode).toBe(200)
  expect(response.body).toHaveProperty('token')
  response = await request(app)
    .get('/api/messages/3')
    .set('x-access-token', response.body.token)
  expect(response.statusCode).toBe(401)
  expect(response.body.message).toBe('You must be a group member to do that')
})

test('Test if user can log in and try to post a message with content in a group', async () => {
  let response = await request(app)
    .post('/login')
    .send({ email: 'Sebastien.Viardot@grenoble-inp.fr', password: '123456' })
  expect(response.statusCode).toBe(200)
  expect(response.body).toHaveProperty('token')
  response = await request(app)
    .post('/api/messages/1')
    .set('x-access-token', response.body.token)
    .send({ content: 'First message in our professors\' group'})
  expect(response.statusCode).toBe(200)
  expect(response.body.message).toBe('Message has been sent in group Professors')
})

test('Test if user can log in and list messages sent in his group', async () => {
  let response = await request(app)
    .post('/login')
    .send({ email: 'Sebastien.Viardot@grenoble-inp.fr', password: '123456' })
  expect(response.statusCode).toBe(200)
  expect(response.body).toHaveProperty('token')
  response = await request(app)
    .get('/api/messages/1')
    .set('x-access-token', response.body.token)
  expect(response.statusCode).toBe(200)
  expect(response.body.message).toBe("Returning group's messages")
  expect(response.body.groupMessages.length).toBeGreaterThan(0)
})